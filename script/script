#!/bin/bash
userpath="/home/local/SPREADTRUM/zhenjun.zhang"
export server="zhenjun.zhang@tjand05"
function croot {
    local TOPFILE=build/envsetup.sh
    local FULLDIR=`pwd`
    while [ `pwd` != $userpath ]
    do
        if [ -f $TOPFILE ]
        then
            local ROOTDIR=`pwd`
            break
        fi
        cd ..
    done
    if [ `pwd` == $userpath ]
        then
        echo "Can not find Android Root Folder"
        return -1
    fi
}


function mam {
    if [ ! $ANDROID_PRODUCT_OUT ]
    then
        echo "You should initial the Android environment, before use this command!"
        return
    fi
    last_pwd=`pwd`
    mm 2>&1|tee ~/tmp/tmplog
    for result in `cat ~/tmp/tmplog |grep "Install:" |sed "s/.*Install://"`
    do
        croot
        mypush $result 
        if [ $? -ne 0 ]
        then
            myecho -r "!! Device is not connection !!!"
        fi
        cd $last_pwd
    done
}

function cds {
    croot
    cd frameworks/base/services
}

function cdc {
    croot
    cd frameworks/base/core/java
}

alias cdout='cd $ANDROID_PRODUCT_OUT'

function mypush()
{
    if [ $# -lt 1 ]
    then
        echo "usage: mypush out/target/product/scxxx/system/lib/libmedia.so"
        return
    fi

    #push services.jar or framework.jar or res.apk
    if [ "$1" == "s" ]
    then
        backup=`pwd`
        cd $ANDROID_PRODUCT_OUT
        cd system/framework/
        for lib in "./services.jar ./oat/arm64/services.odex ./oat/arm64/services.art ./oat/arm64/services.vdex ./services.jar.prof"
        do
            sudo adb push $lib system/framework/$lib 
        done
        cd $backup
        return
    elif [ "$1" == "f" ]
    then
        backup=`pwd`
        cd $ANDROID_PRODUCT_OUT
        cd system/framework/
        for lib in "./services.jar ./oat/arm64/services.odex ./oat/arm64/services.art ./oat/arm64/services.vdex ./services.jar.prof"
        do
            sudo adb push $lib /system/framework/$lib 
        done
        cd $backup
        return
    elif [ "$1" == "r" ]
    then
        backup=`pwd`
        cd $ANDROID_PRODUCT_OUT
        sudo adb push system/framework/framework-res.apk /system/framework/
        cd $backup
        return
    fi

    echo push..

    lib=$1
    havefolder=`echo $lib | grep "/"`

    if [ "$havefolder" != "" ]
    then
        so=`echo $lib |awk -F "system" '{print $2}'`
        so="system$so"
        echo $so

        myecho -g "push $lib to $so"

        sudo adb push $lib $so
    else
        backup=`pwd`
        cdout
        cd system
        libname=`find -name ${lib}*`
        echo $libname
        pushtolibname=`echo $libname |sed "s/.//"`
        echo "adb push $libname system$pushtolibname"
        sudo adb push $libname system$pushtolibname
        cd $backup
    fi
}

function myjava6()
{
    export JAVA_HOME=/usr/java/jdk1.6.0_29
    export JRE_HOME=/usr/java/jdk1.6.0_29/jre
    export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH
    export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
}

alias pushss='sudo adb push $OUT/system/framework/services.jar $OUT/system/framework/services.jar.prof $OUT/system/framework/services.core.jar system/framework/; sudo adb push $OUT/system/framework/oat/arm/services.core.vdex $OUT/system/framework/oat/arm/services.core.odex system/framework/oat/arm/; sudo adb push $OUT/system/framework/oat/arm64/services.vdex $OUT/system/framework/oat/arm64/services.odex $OUT/system/framework/oat/arm64/services.core.vdex $OUT/system/framework/oat/arm64/services.core.odex
$OUT/system/framework/oat/arm64/services.art system/framework/oat/arm64/'
alias pushff='sudo adb push $OUT/system/framework/framework.jar $OUT/system/framework/boot-framework.vdex system/framework/; sudo adb push $OUT/system/framework/arm/boot-framework.oat $OUT/system/framework/arm/boot-framework.art.rel $OUT/system/framework/arm/boot-framework.art system/framework/arm/; sudo adb push $OUT/system/framework/arm64/boot-framework.oat $OUT/system/framework/arm64/boot-framework.art.rel $OUT/system/framework/arm64/boot-framework.art system/framework/arm64/'
